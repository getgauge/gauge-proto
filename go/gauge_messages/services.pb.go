//----------------------------------------------------------------
//  Copyright (c) ThoughtWorks, Inc.
//  Licensed under the Apache License, Version 2.0
//  See LICENSE in the project root for license information.
//----------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: services.proto

package gauge_messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_services_proto protoreflect.FileDescriptor

const file_services_proto_rawDesc = "" +
	"\n" +
	"\x0eservices.proto\x12\x0egauge.messages\x1a\x0emessages.proto2\xe7\x12\n" +
	"\x06Runner\x12Y\n" +
	"\fValidateStep\x12#.gauge.messages.StepValidateRequest\x1a$.gauge.messages.StepValidateResponse\x12n\n" +
	"\x18InitializeSuiteDataStore\x12).gauge.messages.SuiteDataStoreInitRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12c\n" +
	"\x0eStartExecution\x12(.gauge.messages.ExecutionStartingRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12l\n" +
	"\x17InitializeSpecDataStore\x12(.gauge.messages.SpecDataStoreInitRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12k\n" +
	"\x12StartSpecExecution\x12,.gauge.messages.SpecExecutionStartingRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12t\n" +
	"\x1bInitializeScenarioDataStore\x12,.gauge.messages.ScenarioDataStoreInitRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12s\n" +
	"\x16StartScenarioExecution\x120.gauge.messages.ScenarioExecutionStartingRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12k\n" +
	"\x12StartStepExecution\x12,.gauge.messages.StepExecutionStartingRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12Z\n" +
	"\vExecuteStep\x12\".gauge.messages.ExecuteStepRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12j\n" +
	"\x13FinishStepExecution\x12*.gauge.messages.StepExecutionEndingRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12r\n" +
	"\x17FinishScenarioExecution\x12..gauge.messages.ScenarioExecutionEndingRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12j\n" +
	"\x13FinishSpecExecution\x12*.gauge.messages.SpecExecutionEndingRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12b\n" +
	"\x0fFinishExecution\x12&.gauge.messages.ExecutionEndingRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12D\n" +
	"\tCacheFile\x12 .gauge.messages.CacheFileRequest\x1a\x15.gauge.messages.Empty\x12P\n" +
	"\vGetStepName\x12\x1f.gauge.messages.StepNameRequest\x1a .gauge.messages.StepNameResponse\x12_\n" +
	"\x0fGetGlobPatterns\x12\x15.gauge.messages.Empty\x1a5.gauge.messages.ImplementationFileGlobPatternResponse\x12S\n" +
	"\fGetStepNames\x12 .gauge.messages.StepNamesRequest\x1a!.gauge.messages.StepNamesResponse\x12_\n" +
	"\x10GetStepPositions\x12$.gauge.messages.StepPositionsRequest\x1a%.gauge.messages.StepPositionsResponse\x12_\n" +
	"\x16GetImplementationFiles\x12\x15.gauge.messages.Empty\x1a..gauge.messages.ImplementationFileListResponse\x12X\n" +
	"\rImplementStub\x12-.gauge.messages.StubImplementationCodeRequest\x1a\x18.gauge.messages.FileDiff\x12M\n" +
	"\bRefactor\x12\x1f.gauge.messages.RefactorRequest\x1a .gauge.messages.RefactorResponse\x12A\n" +
	"\x04Kill\x12\".gauge.messages.KillProcessRequest\x1a\x15.gauge.messages.Empty\x12z\n" +
	"\x1eNotifyConceptExecutionStarting\x12/.gauge.messages.ConceptExecutionStartingRequest\x1a'.gauge.messages.ExecutionStatusResponse\x12v\n" +
	"\x1cNotifyConceptExecutionEnding\x12-.gauge.messages.ConceptExecutionEndingRequest\x1a'.gauge.messages.ExecutionStatusResponse2\xff\b\n" +
	"\bReporter\x12Z\n" +
	"\x17NotifyExecutionStarting\x12(.gauge.messages.ExecutionStartingRequest\x1a\x15.gauge.messages.Empty\x12b\n" +
	"\x1bNotifySpecExecutionStarting\x12,.gauge.messages.SpecExecutionStartingRequest\x1a\x15.gauge.messages.Empty\x12j\n" +
	"\x1fNotifyScenarioExecutionStarting\x120.gauge.messages.ScenarioExecutionStartingRequest\x1a\x15.gauge.messages.Empty\x12h\n" +
	"\x1eNotifyConceptExecutionStarting\x12/.gauge.messages.ConceptExecutionStartingRequest\x1a\x15.gauge.messages.Empty\x12d\n" +
	"\x1cNotifyConceptExecutionEnding\x12-.gauge.messages.ConceptExecutionEndingRequest\x1a\x15.gauge.messages.Empty\x12b\n" +
	"\x1bNotifyStepExecutionStarting\x12,.gauge.messages.StepExecutionStartingRequest\x1a\x15.gauge.messages.Empty\x12^\n" +
	"\x19NotifyStepExecutionEnding\x12*.gauge.messages.StepExecutionEndingRequest\x1a\x15.gauge.messages.Empty\x12f\n" +
	"\x1dNotifyScenarioExecutionEnding\x12..gauge.messages.ScenarioExecutionEndingRequest\x1a\x15.gauge.messages.Empty\x12^\n" +
	"\x19NotifySpecExecutionEnding\x12*.gauge.messages.SpecExecutionEndingRequest\x1a\x15.gauge.messages.Empty\x12V\n" +
	"\x15NotifyExecutionEnding\x12&.gauge.messages.ExecutionEndingRequest\x1a\x15.gauge.messages.Empty\x12P\n" +
	"\x11NotifySuiteResult\x12$.gauge.messages.SuiteExecutionResult\x1a\x15.gauge.messages.Empty\x12A\n" +
	"\x04Kill\x12\".gauge.messages.KillProcessRequest\x1a\x15.gauge.messages.Empty2\x93\x01\n" +
	"\n" +
	"Documenter\x12B\n" +
	"\fGenerateDocs\x12\x1b.gauge.messages.SpecDetails\x1a\x15.gauge.messages.Empty\x12A\n" +
	"\x04Kill\x12\".gauge.messages.KillProcessRequest\x1a\x15.gauge.messages.EmptyB\\\n" +
	"\x16com.thoughtworks.gaugeZ1github.com/getgauge/gauge-proto/go/gauge_messages\xaa\x02\x0eGauge.Messagesb\x06proto3"

var file_services_proto_goTypes = []any{
	(*StepValidateRequest)(nil),                   // 0: gauge.messages.StepValidateRequest
	(*SuiteDataStoreInitRequest)(nil),             // 1: gauge.messages.SuiteDataStoreInitRequest
	(*ExecutionStartingRequest)(nil),              // 2: gauge.messages.ExecutionStartingRequest
	(*SpecDataStoreInitRequest)(nil),              // 3: gauge.messages.SpecDataStoreInitRequest
	(*SpecExecutionStartingRequest)(nil),          // 4: gauge.messages.SpecExecutionStartingRequest
	(*ScenarioDataStoreInitRequest)(nil),          // 5: gauge.messages.ScenarioDataStoreInitRequest
	(*ScenarioExecutionStartingRequest)(nil),      // 6: gauge.messages.ScenarioExecutionStartingRequest
	(*StepExecutionStartingRequest)(nil),          // 7: gauge.messages.StepExecutionStartingRequest
	(*ExecuteStepRequest)(nil),                    // 8: gauge.messages.ExecuteStepRequest
	(*StepExecutionEndingRequest)(nil),            // 9: gauge.messages.StepExecutionEndingRequest
	(*ScenarioExecutionEndingRequest)(nil),        // 10: gauge.messages.ScenarioExecutionEndingRequest
	(*SpecExecutionEndingRequest)(nil),            // 11: gauge.messages.SpecExecutionEndingRequest
	(*ExecutionEndingRequest)(nil),                // 12: gauge.messages.ExecutionEndingRequest
	(*CacheFileRequest)(nil),                      // 13: gauge.messages.CacheFileRequest
	(*StepNameRequest)(nil),                       // 14: gauge.messages.StepNameRequest
	(*Empty)(nil),                                 // 15: gauge.messages.Empty
	(*StepNamesRequest)(nil),                      // 16: gauge.messages.StepNamesRequest
	(*StepPositionsRequest)(nil),                  // 17: gauge.messages.StepPositionsRequest
	(*StubImplementationCodeRequest)(nil),         // 18: gauge.messages.StubImplementationCodeRequest
	(*RefactorRequest)(nil),                       // 19: gauge.messages.RefactorRequest
	(*KillProcessRequest)(nil),                    // 20: gauge.messages.KillProcessRequest
	(*ConceptExecutionStartingRequest)(nil),       // 21: gauge.messages.ConceptExecutionStartingRequest
	(*ConceptExecutionEndingRequest)(nil),         // 22: gauge.messages.ConceptExecutionEndingRequest
	(*SuiteExecutionResult)(nil),                  // 23: gauge.messages.SuiteExecutionResult
	(*SpecDetails)(nil),                           // 24: gauge.messages.SpecDetails
	(*StepValidateResponse)(nil),                  // 25: gauge.messages.StepValidateResponse
	(*ExecutionStatusResponse)(nil),               // 26: gauge.messages.ExecutionStatusResponse
	(*StepNameResponse)(nil),                      // 27: gauge.messages.StepNameResponse
	(*ImplementationFileGlobPatternResponse)(nil), // 28: gauge.messages.ImplementationFileGlobPatternResponse
	(*StepNamesResponse)(nil),                     // 29: gauge.messages.StepNamesResponse
	(*StepPositionsResponse)(nil),                 // 30: gauge.messages.StepPositionsResponse
	(*ImplementationFileListResponse)(nil),        // 31: gauge.messages.ImplementationFileListResponse
	(*FileDiff)(nil),                              // 32: gauge.messages.FileDiff
	(*RefactorResponse)(nil),                      // 33: gauge.messages.RefactorResponse
}
var file_services_proto_depIdxs = []int32{
	0,  // 0: gauge.messages.Runner.ValidateStep:input_type -> gauge.messages.StepValidateRequest
	1,  // 1: gauge.messages.Runner.InitializeSuiteDataStore:input_type -> gauge.messages.SuiteDataStoreInitRequest
	2,  // 2: gauge.messages.Runner.StartExecution:input_type -> gauge.messages.ExecutionStartingRequest
	3,  // 3: gauge.messages.Runner.InitializeSpecDataStore:input_type -> gauge.messages.SpecDataStoreInitRequest
	4,  // 4: gauge.messages.Runner.StartSpecExecution:input_type -> gauge.messages.SpecExecutionStartingRequest
	5,  // 5: gauge.messages.Runner.InitializeScenarioDataStore:input_type -> gauge.messages.ScenarioDataStoreInitRequest
	6,  // 6: gauge.messages.Runner.StartScenarioExecution:input_type -> gauge.messages.ScenarioExecutionStartingRequest
	7,  // 7: gauge.messages.Runner.StartStepExecution:input_type -> gauge.messages.StepExecutionStartingRequest
	8,  // 8: gauge.messages.Runner.ExecuteStep:input_type -> gauge.messages.ExecuteStepRequest
	9,  // 9: gauge.messages.Runner.FinishStepExecution:input_type -> gauge.messages.StepExecutionEndingRequest
	10, // 10: gauge.messages.Runner.FinishScenarioExecution:input_type -> gauge.messages.ScenarioExecutionEndingRequest
	11, // 11: gauge.messages.Runner.FinishSpecExecution:input_type -> gauge.messages.SpecExecutionEndingRequest
	12, // 12: gauge.messages.Runner.FinishExecution:input_type -> gauge.messages.ExecutionEndingRequest
	13, // 13: gauge.messages.Runner.CacheFile:input_type -> gauge.messages.CacheFileRequest
	14, // 14: gauge.messages.Runner.GetStepName:input_type -> gauge.messages.StepNameRequest
	15, // 15: gauge.messages.Runner.GetGlobPatterns:input_type -> gauge.messages.Empty
	16, // 16: gauge.messages.Runner.GetStepNames:input_type -> gauge.messages.StepNamesRequest
	17, // 17: gauge.messages.Runner.GetStepPositions:input_type -> gauge.messages.StepPositionsRequest
	15, // 18: gauge.messages.Runner.GetImplementationFiles:input_type -> gauge.messages.Empty
	18, // 19: gauge.messages.Runner.ImplementStub:input_type -> gauge.messages.StubImplementationCodeRequest
	19, // 20: gauge.messages.Runner.Refactor:input_type -> gauge.messages.RefactorRequest
	20, // 21: gauge.messages.Runner.Kill:input_type -> gauge.messages.KillProcessRequest
	21, // 22: gauge.messages.Runner.NotifyConceptExecutionStarting:input_type -> gauge.messages.ConceptExecutionStartingRequest
	22, // 23: gauge.messages.Runner.NotifyConceptExecutionEnding:input_type -> gauge.messages.ConceptExecutionEndingRequest
	2,  // 24: gauge.messages.Reporter.NotifyExecutionStarting:input_type -> gauge.messages.ExecutionStartingRequest
	4,  // 25: gauge.messages.Reporter.NotifySpecExecutionStarting:input_type -> gauge.messages.SpecExecutionStartingRequest
	6,  // 26: gauge.messages.Reporter.NotifyScenarioExecutionStarting:input_type -> gauge.messages.ScenarioExecutionStartingRequest
	21, // 27: gauge.messages.Reporter.NotifyConceptExecutionStarting:input_type -> gauge.messages.ConceptExecutionStartingRequest
	22, // 28: gauge.messages.Reporter.NotifyConceptExecutionEnding:input_type -> gauge.messages.ConceptExecutionEndingRequest
	7,  // 29: gauge.messages.Reporter.NotifyStepExecutionStarting:input_type -> gauge.messages.StepExecutionStartingRequest
	9,  // 30: gauge.messages.Reporter.NotifyStepExecutionEnding:input_type -> gauge.messages.StepExecutionEndingRequest
	10, // 31: gauge.messages.Reporter.NotifyScenarioExecutionEnding:input_type -> gauge.messages.ScenarioExecutionEndingRequest
	11, // 32: gauge.messages.Reporter.NotifySpecExecutionEnding:input_type -> gauge.messages.SpecExecutionEndingRequest
	12, // 33: gauge.messages.Reporter.NotifyExecutionEnding:input_type -> gauge.messages.ExecutionEndingRequest
	23, // 34: gauge.messages.Reporter.NotifySuiteResult:input_type -> gauge.messages.SuiteExecutionResult
	20, // 35: gauge.messages.Reporter.Kill:input_type -> gauge.messages.KillProcessRequest
	24, // 36: gauge.messages.Documenter.GenerateDocs:input_type -> gauge.messages.SpecDetails
	20, // 37: gauge.messages.Documenter.Kill:input_type -> gauge.messages.KillProcessRequest
	25, // 38: gauge.messages.Runner.ValidateStep:output_type -> gauge.messages.StepValidateResponse
	26, // 39: gauge.messages.Runner.InitializeSuiteDataStore:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 40: gauge.messages.Runner.StartExecution:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 41: gauge.messages.Runner.InitializeSpecDataStore:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 42: gauge.messages.Runner.StartSpecExecution:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 43: gauge.messages.Runner.InitializeScenarioDataStore:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 44: gauge.messages.Runner.StartScenarioExecution:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 45: gauge.messages.Runner.StartStepExecution:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 46: gauge.messages.Runner.ExecuteStep:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 47: gauge.messages.Runner.FinishStepExecution:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 48: gauge.messages.Runner.FinishScenarioExecution:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 49: gauge.messages.Runner.FinishSpecExecution:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 50: gauge.messages.Runner.FinishExecution:output_type -> gauge.messages.ExecutionStatusResponse
	15, // 51: gauge.messages.Runner.CacheFile:output_type -> gauge.messages.Empty
	27, // 52: gauge.messages.Runner.GetStepName:output_type -> gauge.messages.StepNameResponse
	28, // 53: gauge.messages.Runner.GetGlobPatterns:output_type -> gauge.messages.ImplementationFileGlobPatternResponse
	29, // 54: gauge.messages.Runner.GetStepNames:output_type -> gauge.messages.StepNamesResponse
	30, // 55: gauge.messages.Runner.GetStepPositions:output_type -> gauge.messages.StepPositionsResponse
	31, // 56: gauge.messages.Runner.GetImplementationFiles:output_type -> gauge.messages.ImplementationFileListResponse
	32, // 57: gauge.messages.Runner.ImplementStub:output_type -> gauge.messages.FileDiff
	33, // 58: gauge.messages.Runner.Refactor:output_type -> gauge.messages.RefactorResponse
	15, // 59: gauge.messages.Runner.Kill:output_type -> gauge.messages.Empty
	26, // 60: gauge.messages.Runner.NotifyConceptExecutionStarting:output_type -> gauge.messages.ExecutionStatusResponse
	26, // 61: gauge.messages.Runner.NotifyConceptExecutionEnding:output_type -> gauge.messages.ExecutionStatusResponse
	15, // 62: gauge.messages.Reporter.NotifyExecutionStarting:output_type -> gauge.messages.Empty
	15, // 63: gauge.messages.Reporter.NotifySpecExecutionStarting:output_type -> gauge.messages.Empty
	15, // 64: gauge.messages.Reporter.NotifyScenarioExecutionStarting:output_type -> gauge.messages.Empty
	15, // 65: gauge.messages.Reporter.NotifyConceptExecutionStarting:output_type -> gauge.messages.Empty
	15, // 66: gauge.messages.Reporter.NotifyConceptExecutionEnding:output_type -> gauge.messages.Empty
	15, // 67: gauge.messages.Reporter.NotifyStepExecutionStarting:output_type -> gauge.messages.Empty
	15, // 68: gauge.messages.Reporter.NotifyStepExecutionEnding:output_type -> gauge.messages.Empty
	15, // 69: gauge.messages.Reporter.NotifyScenarioExecutionEnding:output_type -> gauge.messages.Empty
	15, // 70: gauge.messages.Reporter.NotifySpecExecutionEnding:output_type -> gauge.messages.Empty
	15, // 71: gauge.messages.Reporter.NotifyExecutionEnding:output_type -> gauge.messages.Empty
	15, // 72: gauge.messages.Reporter.NotifySuiteResult:output_type -> gauge.messages.Empty
	15, // 73: gauge.messages.Reporter.Kill:output_type -> gauge.messages.Empty
	15, // 74: gauge.messages.Documenter.GenerateDocs:output_type -> gauge.messages.Empty
	15, // 75: gauge.messages.Documenter.Kill:output_type -> gauge.messages.Empty
	38, // [38:76] is the sub-list for method output_type
	0,  // [0:38] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_services_proto_init() }
func file_services_proto_init() {
	if File_services_proto != nil {
		return
	}
	file_messages_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_services_proto_rawDesc), len(file_services_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_services_proto_goTypes,
		DependencyIndexes: file_services_proto_depIdxs,
	}.Build()
	File_services_proto = out.File
	file_services_proto_goTypes = nil
	file_services_proto_depIdxs = nil
}
