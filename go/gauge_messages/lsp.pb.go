//----------------------------------------------------------------
//  Copyright (c) ThoughtWorks, Inc.
//  Licensed under the Apache License, Version 2.0
//  See LICENSE in the project root for license information.
//----------------------------------------------------------------

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: lsp.proto

package gauge_messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_lsp_proto protoreflect.FileDescriptor

const file_lsp_proto_rawDesc = "" +
	"\n" +
	"\tlsp.proto\x12\x0egauge.messages\x1a\x0emessages.proto2\x9c\a\n" +
	"\n" +
	"lspService\x12X\n" +
	"\fGetStepNames\x12 .gauge.messages.StepNamesRequest\x1a!.gauge.messages.StepNamesResponse\"\x03\x88\x02\x01\x12I\n" +
	"\tCacheFile\x12 .gauge.messages.CacheFileRequest\x1a\x15.gauge.messages.Empty\"\x03\x88\x02\x01\x12d\n" +
	"\x10GetStepPositions\x12$.gauge.messages.StepPositionsRequest\x1a%.gauge.messages.StepPositionsResponse\"\x03\x88\x02\x01\x12d\n" +
	"\x16GetImplementationFiles\x12\x15.gauge.messages.Empty\x1a..gauge.messages.ImplementationFileListResponse\"\x03\x88\x02\x01\x12]\n" +
	"\rImplementStub\x12-.gauge.messages.StubImplementationCodeRequest\x1a\x18.gauge.messages.FileDiff\"\x03\x88\x02\x01\x12^\n" +
	"\fValidateStep\x12#.gauge.messages.StepValidateRequest\x1a$.gauge.messages.StepValidateResponse\"\x03\x88\x02\x01\x12R\n" +
	"\bRefactor\x12\x1f.gauge.messages.RefactorRequest\x1a .gauge.messages.RefactorResponse\"\x03\x88\x02\x01\x12U\n" +
	"\vGetStepName\x12\x1f.gauge.messages.StepNameRequest\x1a .gauge.messages.StepNameResponse\"\x03\x88\x02\x01\x12d\n" +
	"\x0fGetGlobPatterns\x12\x15.gauge.messages.Empty\x1a5.gauge.messages.ImplementationFileGlobPatternResponse\"\x03\x88\x02\x01\x12M\n" +
	"\vKillProcess\x12\".gauge.messages.KillProcessRequest\x1a\x15.gauge.messages.Empty\"\x03\x88\x02\x01B\\\n" +
	"\x16com.thoughtworks.gaugeZ1github.com/getgauge/gauge-proto/go/gauge_messages\xaa\x02\x0eGauge.Messagesb\x06proto3"

var file_lsp_proto_goTypes = []any{
	(*StepNamesRequest)(nil),                      // 0: gauge.messages.StepNamesRequest
	(*CacheFileRequest)(nil),                      // 1: gauge.messages.CacheFileRequest
	(*StepPositionsRequest)(nil),                  // 2: gauge.messages.StepPositionsRequest
	(*Empty)(nil),                                 // 3: gauge.messages.Empty
	(*StubImplementationCodeRequest)(nil),         // 4: gauge.messages.StubImplementationCodeRequest
	(*StepValidateRequest)(nil),                   // 5: gauge.messages.StepValidateRequest
	(*RefactorRequest)(nil),                       // 6: gauge.messages.RefactorRequest
	(*StepNameRequest)(nil),                       // 7: gauge.messages.StepNameRequest
	(*KillProcessRequest)(nil),                    // 8: gauge.messages.KillProcessRequest
	(*StepNamesResponse)(nil),                     // 9: gauge.messages.StepNamesResponse
	(*StepPositionsResponse)(nil),                 // 10: gauge.messages.StepPositionsResponse
	(*ImplementationFileListResponse)(nil),        // 11: gauge.messages.ImplementationFileListResponse
	(*FileDiff)(nil),                              // 12: gauge.messages.FileDiff
	(*StepValidateResponse)(nil),                  // 13: gauge.messages.StepValidateResponse
	(*RefactorResponse)(nil),                      // 14: gauge.messages.RefactorResponse
	(*StepNameResponse)(nil),                      // 15: gauge.messages.StepNameResponse
	(*ImplementationFileGlobPatternResponse)(nil), // 16: gauge.messages.ImplementationFileGlobPatternResponse
}
var file_lsp_proto_depIdxs = []int32{
	0,  // 0: gauge.messages.lspService.GetStepNames:input_type -> gauge.messages.StepNamesRequest
	1,  // 1: gauge.messages.lspService.CacheFile:input_type -> gauge.messages.CacheFileRequest
	2,  // 2: gauge.messages.lspService.GetStepPositions:input_type -> gauge.messages.StepPositionsRequest
	3,  // 3: gauge.messages.lspService.GetImplementationFiles:input_type -> gauge.messages.Empty
	4,  // 4: gauge.messages.lspService.ImplementStub:input_type -> gauge.messages.StubImplementationCodeRequest
	5,  // 5: gauge.messages.lspService.ValidateStep:input_type -> gauge.messages.StepValidateRequest
	6,  // 6: gauge.messages.lspService.Refactor:input_type -> gauge.messages.RefactorRequest
	7,  // 7: gauge.messages.lspService.GetStepName:input_type -> gauge.messages.StepNameRequest
	3,  // 8: gauge.messages.lspService.GetGlobPatterns:input_type -> gauge.messages.Empty
	8,  // 9: gauge.messages.lspService.KillProcess:input_type -> gauge.messages.KillProcessRequest
	9,  // 10: gauge.messages.lspService.GetStepNames:output_type -> gauge.messages.StepNamesResponse
	3,  // 11: gauge.messages.lspService.CacheFile:output_type -> gauge.messages.Empty
	10, // 12: gauge.messages.lspService.GetStepPositions:output_type -> gauge.messages.StepPositionsResponse
	11, // 13: gauge.messages.lspService.GetImplementationFiles:output_type -> gauge.messages.ImplementationFileListResponse
	12, // 14: gauge.messages.lspService.ImplementStub:output_type -> gauge.messages.FileDiff
	13, // 15: gauge.messages.lspService.ValidateStep:output_type -> gauge.messages.StepValidateResponse
	14, // 16: gauge.messages.lspService.Refactor:output_type -> gauge.messages.RefactorResponse
	15, // 17: gauge.messages.lspService.GetStepName:output_type -> gauge.messages.StepNameResponse
	16, // 18: gauge.messages.lspService.GetGlobPatterns:output_type -> gauge.messages.ImplementationFileGlobPatternResponse
	3,  // 19: gauge.messages.lspService.KillProcess:output_type -> gauge.messages.Empty
	10, // [10:20] is the sub-list for method output_type
	0,  // [0:10] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_lsp_proto_init() }
func file_lsp_proto_init() {
	if File_lsp_proto != nil {
		return
	}
	file_messages_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lsp_proto_rawDesc), len(file_lsp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lsp_proto_goTypes,
		DependencyIndexes: file_lsp_proto_depIdxs,
	}.Build()
	File_lsp_proto = out.File
	file_lsp_proto_goTypes = nil
	file_lsp_proto_depIdxs = nil
}
